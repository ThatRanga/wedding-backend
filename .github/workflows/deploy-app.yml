name: app
on:
  push:
    branches:
      - 'main'
    paths:
      - 'app/src/main/**'
      - 'app/src/build.gradle.kts'
      - 'buildSrc/**'
      - 'buildspec.yml'
      - 'appspec.yml'
      - 'scripts/server/**'
      - '.github/scripts/**'
      - '.github/workflows/deploy-app.yml'

jobs:
#  start-deploy-dev:
#    runs-on: 'ubuntu-latest'
#    environment: 'dev'
#    permissions:
#      id-token: write
#      contents: read
#    steps:
#    - uses: actions/checkout@v3
#    - name: Configure AWS credentials for test env
#      uses: aws-actions/configure-aws-credentials@v2
#      with:
#        role-to-assume: ${{ secrets.AWS_PIPELINE_ROLE }}
#        aws-region: ap-southeast-2
#        role-session-name: start-deploy@githubactions
#    - name: Start pipeline
#      shell: bash
#      run: ./.github/scripts/start-pipeline.sh
#    - name: Publish artifact
#      uses: actions/upload-artifact@v3
#      with:
#        name: pipelineId
#        path: artifact.txt
#        retention-days: 1
#
#  wait-for-deploy:
#    needs: start-deploy-dev
#    runs-on: 'ubuntu-latest'
#    timeout-minutes: 10
#    environment: 'dev'
#    permissions:
#      id-token: write
#      contents: read
#    steps:
#      - uses: actions/checkout@v3
#      - name: Configure AWS credentials for test env
#        uses: aws-actions/configure-aws-credentials@v2
#        with:
#          role-to-assume: ${{ secrets.AWS_PIPELINE_ROLE }}
#          aws-region: ap-southeast-2
#          role-session-name: wait-for-deploy@githubactions
#      - name: Download artifact
#        uses: actions/download-artifact@v3
#        with:
#          name: pipelineId
#      - name: Wait for pipeline
#        shell: bash
#        run: |
#          pipelineId=`cat artifact.txt`
#          ./.github/scripts/watch-pipeline.sh $pipelineIds

  start-deploy-prod:
    runs-on: 'ubuntu-latest'
    environment: 'prod'
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v3
    - name: Configure AWS credentials for test env
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_PIPELINE_ROLE }}
        aws-region: ap-southeast-2
        role-session-name: start-deploy@githubactions
    - name: Start pipeline
      shell: bash
      run: ./.github/scripts/start-pipeline.sh prod
    - name: Publish artifact
      uses: actions/upload-artifact@v3
      with:
        name: pipelineId
        path: artifact.txt
        retention-days: 1

  wait-for-deploy-prod:
    needs: start-deploy-prod
    runs-on: 'ubuntu-latest'
    timeout-minutes: 10
    environment: 'prod'
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials for test env
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_PIPELINE_ROLE }}
          aws-region: ap-southeast-2
          role-session-name: wait-for-deploy@githubactions
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: pipelineId
      - name: Wait for pipeline
        shell: bash
        run: |
          pipelineId=`cat artifact.txt`
          ./.github/scripts/watch-pipeline.sh $pipelineId

          
        

