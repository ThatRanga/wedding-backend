{
 "Resources": {
  "simpleinstance1role9EEDA67C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonEC2RoleforAWSCodeDeploy"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "test-stack/simple-instance-1-role/Resource"
   }
  },
  "simpleloadbalancerAC90B3BA": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "simpleloadbalancerSecurityGroupD3DBDF90",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     "subnet-0be5c8bb4b68322b0",
     "subnet-012fa70abd6d0544e",
     "subnet-0e72f4560a07d5237"
    ],
    "Type": "application"
   },
   "Metadata": {
    "aws:cdk:path": "test-stack/simple-load-balancer/Resource"
   }
  },
  "simpleloadbalancerSecurityGroupD3DBDF90": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB teststacksimpleloadbalancerAB2CE04A",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 443",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "VpcId": "vpc-0335b61a81f638466"
   },
   "Metadata": {
    "aws:cdk:path": "test-stack/simple-load-balancer/SecurityGroup/Resource"
   }
  },
  "simpleloadbalancerSecurityGrouptoteststackAutoScalingGroupInstanceSecurityGroup3952351280AD3898A4": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "GroupId": {
     "Fn::GetAtt": [
      "simpleloadbalancerSecurityGroupD3DBDF90",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "Description": "Load balancer to target",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "AutoScalingGroupInstanceSecurityGroup9D2E0C5E",
      "GroupId"
     ]
    },
    "FromPort": 80,
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "test-stack/simple-load-balancer/SecurityGroup/to teststackAutoScalingGroupInstanceSecurityGroup39523512:80"
   }
  },
  "simpleloadbalancerALBListenerHttp336CD0BF": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "RedirectConfig": {
       "Protocol": "HTTPS",
       "StatusCode": "HTTP_301"
      },
      "Type": "redirect"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "simpleloadbalancerAC90B3BA"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "test-stack/simple-load-balancer/ALBListenerHttp/Resource"
   }
  },
  "simpleloadbalancerALBListenerHttpsE9721260": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "simpleloadbalancerALBListenerHttpsTargetGroupHttpsGroupF6BA6573"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "simpleloadbalancerAC90B3BA"
    },
    "Certificates": [
     {
      "CertificateArn": "arn:aws:acm:ap-southeast-2:781525612065:certificate/3bdbe752-88bb-4a3a-9393-0d9be15ff58b"
     }
    ],
    "Port": 443,
    "Protocol": "HTTPS"
   },
   "Metadata": {
    "aws:cdk:path": "test-stack/simple-load-balancer/ALBListenerHttps/Resource"
   }
  },
  "simpleloadbalancerALBListenerHttpsTargetGroupHttpsGroupF6BA6573": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "HealthCheckPath": "/actuator/health",
    "HealthCheckPort": "80",
    "Matcher": {
     "HttpCode": "200"
    },
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "instance",
    "VpcId": "vpc-0335b61a81f638466"
   },
   "Metadata": {
    "aws:cdk:path": "test-stack/simple-load-balancer/ALBListenerHttps/TargetGroupHttpsGroup/Resource"
   }
  },
  "AutoScalingGroupInstanceSecurityGroup9D2E0C5E": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "test-stack/AutoScalingGroup/InstanceSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "code-deploy",
      "Value": "wedding-backend"
     },
     {
      "Key": "Name",
      "Value": "test-stack/AutoScalingGroup"
     }
    ],
    "VpcId": "vpc-0335b61a81f638466"
   },
   "Metadata": {
    "aws:cdk:path": "test-stack/AutoScalingGroup/InstanceSecurityGroup/Resource"
   }
  },
  "AutoScalingGroupInstanceSecurityGroupfromteststacksimpleloadbalancerSecurityGroup7A541B6F80E122A813": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "Load balancer to target",
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "AutoScalingGroupInstanceSecurityGroup9D2E0C5E",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "simpleloadbalancerSecurityGroupD3DBDF90",
      "GroupId"
     ]
    },
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "test-stack/AutoScalingGroup/InstanceSecurityGroup/from teststacksimpleloadbalancerSecurityGroup7A541B6F:80"
   }
  },
  "AutoScalingGroupInstanceProfile342FAC7C": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "simpleinstance1role9EEDA67C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "test-stack/AutoScalingGroup/InstanceProfile"
   }
  },
  "AutoScalingGroupLaunchConfigDEEB160C": {
   "Type": "AWS::AutoScaling::LaunchConfiguration",
   "Properties": {
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t2.micro",
    "IamInstanceProfile": {
     "Ref": "AutoScalingGroupInstanceProfile342FAC7C"
    },
    "KeyName": "default-ssh-key",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "AutoScalingGroupInstanceSecurityGroup9D2E0C5E",
       "GroupId"
      ]
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash\n\nsudo yum -y update\nsudo yum -y install ruby\nsudo yum -y install wget\ncd /home/ec2-user\nwget https://aws-codedeploy-ap-southeast-2.s3.ap-southeast-2.amazonaws.com/latest/install\nsudo chmod +x ./install\nsudo ./install auto\nsudo yum -y install java-17-amazon-corretto-devel\n"
    }
   },
   "DependsOn": [
    "simpleinstance1role9EEDA67C"
   ],
   "Metadata": {
    "aws:cdk:path": "test-stack/AutoScalingGroup/LaunchConfig"
   }
  },
  "AutoScalingGroupASG804C35BE": {
   "Type": "AWS::AutoScaling::AutoScalingGroup",
   "Properties": {
    "MaxSize": "2",
    "MinSize": "1",
    "HealthCheckType": "EC2",
    "LaunchConfigurationName": {
     "Ref": "AutoScalingGroupLaunchConfigDEEB160C"
    },
    "Tags": [
     {
      "Key": "code-deploy",
      "PropagateAtLaunch": true,
      "Value": "wedding-backend"
     },
     {
      "Key": "Name",
      "PropagateAtLaunch": true,
      "Value": "test-stack/AutoScalingGroup"
     }
    ],
    "TargetGroupARNs": [
     {
      "Ref": "simpleloadbalancerALBListenerHttpsTargetGroupHttpsGroupF6BA6573"
     }
    ],
    "VPCZoneIdentifier": [
     "subnet-0be5c8bb4b68322b0",
     "subnet-012fa70abd6d0544e",
     "subnet-0e72f4560a07d5237"
    ]
   },
   "UpdatePolicy": {
    "AutoScalingScheduledAction": {
     "IgnoreUnmodifiedGroupSizeProperties": true
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-stack/AutoScalingGroup/ASG"
   }
  },
  "authenticationkey82B068A0": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": "arn:aws:iam::781525612065:root"
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "KeySpec": "RSA_2048",
    "KeyUsage": "SIGN_VERIFY"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "test-stack/authentication-key/Resource"
   }
  },
  "authenticationkeyAliasCA8E9241": {
   "Type": "AWS::KMS::Alias",
   "Properties": {
    "AliasName": "alias/authentication-key",
    "TargetKeyId": {
     "Fn::GetAtt": [
      "authenticationkey82B068A0",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-stack/authentication-key/Alias/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31RyU7DMBD9lt4dU3ooXEuFUKGHKuGOpu4kDHHsyEtRZfnfsRNSBZA4vXmLZtGs+PqeLxfwaQtxagtJRx4qB6JlJVrtjUCWvLdA0PFQaolsW6sJd8o6UAIPRtckMTKUYB0JqeF0BJksUs15xcOm7yUJcKTVPnkPg4cm9/jB5zmyDtV3Zqpn/iuYBt2T0b7PkRlNa4g0s0LhDbnLNfK/8NgYtPaPvFODHhl4p60AmS5K9yRSjeTabQ9eifetVjU13gw7Zvl3NLK2szy84CW7GTaSYBg8FDHm8gAGOnTj+dMnInuGM9zc3vElXy8+LFFhvHLUIS9H/ALXUNFBzgEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "test-stack/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}